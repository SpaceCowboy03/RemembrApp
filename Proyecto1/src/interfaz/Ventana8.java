/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import interfaz.Sesion;
import java.io.InputStreamReader;
import java.util.Scanner;
import proyecto1.Activity;
import estructuras.DoubleLinkedList;
import estructuras.DoubleNode;
import java.time.LocalDate;
import java.time.LocalTime;
import javax.swing.table.DefaultTableModel;
import proyecto1.OrderedActListHandler;
import proyecto1.Priority;

/**
 *
 * @author Acer
 */
public class Ventana8 extends javax.swing.JFrame {

    DoubleLinkedList<Activity> calendar2;
    /**
     * Creates new form Ventana8
     */
    
    public Ventana8(DoubleLinkedList<Activity> calendar) {
        initComponents();
        calendar2 = calendar;
        new OrderedActListHandler<Activity>().order(calendar2);
        imprimir(calendar2);
    }

    public Ventana8() {
        initComponents();
    }

    public void imprimir(DoubleLinkedList<Activity> calendar) {
//        DoubleNode actual = (DoubleNode) calendar2.getHead();
//        String valoresdelalista = "";
//
//        while (actual != null) {
//
//            valoresdelalista += "Actividad: " + ((Activity) actual.getValue()).getName()
//                    + " \nFecha: " + ((Activity) actual.getValue()).getDate() + " Hora: " + ((Activity) actual.getValue()).getHour() + " \nPrioridad: " + ((Activity) actual.getValue()).getPriority()
//                    + " \nEtiqueta: " + ((Activity) actual.getValue()).getLabel() + "\n-----------\n";
//
//            actual = (DoubleNode) actual.getNext();
//
//        }
        //this.txtArea2.setText(valoresdelalista);
        DefaultTableModel model = (DefaultTableModel)actTable.getModel();
        model.setRowCount(0);
        DoubleNode<Activity> actual = (DoubleNode<Activity>) calendar.getHead();
        while(actual != null){
            model.addRow(new Object[]{actual.getValue().getName(), actual.getValue().getDate().toString(),
                                      actual.getValue().getHour().toString(), actual.getValue().getPriority().toString(),
                                      actual.getValue().getLabel()});
            actual = actual.getNext();
        }

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bg = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        filterButton = new javax.swing.JButton();
        datePicker = new com.github.lgooddatepicker.components.DatePicker();
        jScrollPane2 = new javax.swing.JScrollPane();
        actTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bg.setBackground(new java.awt.Color(51, 153, 255));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Seleccione la tarea a eliminar");
        bg.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        filterButton.setText("Filtrar");
        filterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterButtonMouseClicked(evt);
            }
        });
        bg.add(filterButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, -1, -1));
        bg.add(datePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        actTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Actividad", "Fecha", "Hora", "Prioridad", "Etiqueta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        actTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(actTable);

        bg.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 500, 360));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/SimboloAutismotransparente1.png"))); // NOI18N
        bg.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 510, 230));

        backButton.setText("Volver");
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });
        bg.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 530, 110, 40));

        deleteButton.setText("Eliminar");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });
        bg.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 530, 110, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        Sesion s = new Sesion (calendar2);
        s.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonMouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        //String eliminarD;
//        if (!calendar2.empty()) {
//            eliminarD = txtEliminar.getText();
//            if (calendar2.findActivity(eliminarD) != null) {
//                calendar2.remove(calendar2.findActivity(eliminarD));
//                System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
//                System.out.println("Tarea eliminada con éxito!");
//            } else {
//                System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
//                System.out.println("No hay ninguna actividad con ese nombre. Revise mayúsculas, minúsculas y espacios");
//            }
//        } else {
//            System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
//            System.out.println("No hay ninguna actividad para eliminar.");
//        }
        DefaultTableModel model = (DefaultTableModel)actTable.getModel();
        String name = (String)actTable.getValueAt(actTable.getSelectedRow(), 0);
        LocalDate date = LocalDate.parse((String)actTable.getValueAt(actTable.getSelectedRow(), 1));
        LocalTime hour = LocalTime.parse((String)actTable.getValueAt(actTable.getSelectedRow(), 2));
        Priority priority = Priority.valueOf((String)actTable.getValueAt(actTable.getSelectedRow(), 3));
        String label = (String)actTable.getValueAt(actTable.getSelectedRow(), 4);
        
        Activity toDel = calendar2.findActivity(name, date, hour, priority, label);
        calendar2.remove(toDel);
        
        new OrderedActListHandler<Activity>().order(calendar2);
        imprimir(calendar2);
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void filterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterButtonMouseClicked
        LocalDate selectedDate = datePicker.getDate();
        if(selectedDate != null){
            DoubleLinkedList toPrint = calendar2.findByDate(selectedDate);
            imprimir(toPrint);
        }else{
            imprimir(calendar2);
        }
        
    }//GEN-LAST:event_filterButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana8().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable actTable;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel bg;
    private com.github.lgooddatepicker.components.DatePicker datePicker;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton filterButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
